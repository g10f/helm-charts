# Default values for sso.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

domain: "sso.g10f.de"
# external Database Host Name, if postgres subchart is disabled
# databaseHost: ""
# storageClass: nas
storageSize: 8Gi
# Existing PVC to clone from
dataSourceName: ""
# comma separated list of hosts, default is the value of domain if empty
allowedHosts: ""

django:
  loadInitialData: "on"
  migrate: "on"
  createAdmin: "on"
  adminName: "admin"
  adminPassword: "changeme"

# Additional environment variables for sso
extraEnv: ""
#  - name: EMAIL_HOST
#    value: mail.g10f.de
#  - name: EMAIL_PORT
#    value: 587

# Configuration for secrets that should be created
secrets: {}
  # mysecret:
  #   type: {}
  #   stringData: {}
  #   data: {}

configMaps: {}
  # myconfig:
  #   data: {}

# Additional environment variables for the wiki mapped from Secret or ConfigMap
extraEnvFrom: ""

entryPoint: |
  {{- .Files.Get "scripts/docker-entrypoint.sh" }}

localSettings:
  local_settings.py: |
    {{- .Files.Get "settings/local_settings.py" }}

replicaCount: 1
image:
  repository: g10f/sso
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

livenessProbe:
  timeoutSeconds: 1

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: ""
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

extraIngresses: []

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  # Additional HorizontalPodAutoscaler labels
  labels: {}
  # The minimum and maximum number of replicas for the Keycloak StatefulSet
  minReplicas: 2
  maxReplicas: 10
  # The metrics to use for scaling
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
  # The scaling policy to use. This will scale up quickly but only scale down a single Pod per 1 minutes.
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 60
      policies:
        - type: Pods
          value: 1
          periodSeconds: 60

nodeSelector: {}
tolerations: []
affinity: {}
podDisruptionBudget: {}
messaging:
  enabled: true
  replicaCount: 1
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podAnnotations: {}
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

media:
  image:
    repository: nginx
    pullPolicy: IfNotPresent
    tag: latest

  replicaCount: 1
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podAnnotations: {}
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  ingress:
    enabled: true

memcached:
  enabled: true

jobs: []
